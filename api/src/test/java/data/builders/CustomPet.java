package data.builders;

import data.TestDataFactory;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import org.openapitools.client.model.Category;
import org.openapitools.client.model.Pet;
import org.openapitools.client.model.Tag;

import java.util.ArrayList;
import java.util.List;

import static io.qala.datagen.RandomValue.between;
import static io.qala.datagen.RandomValue.length;

@NoArgsConstructor
@Getter
@Builder
public class CustomPet {
    Long id;
    Category category;
    String name;
    List<String> photoUrls = new ArrayList<String>();
    List<Tag> tags;

    //we have to overwrite build() method generated by lombok because we want to return a different type
    public static class CustomPetBuilder {
        Long id = between(0, 100000000).Long();             // let us set default random value
        String name = length(10).english();                 // let us set default random value
        Category category = TestDataFactory.aDefaultCategory().build();
        List<String> photoUrls = new ArrayList<String>();
        List<Tag> tags = null;
        public Pet build() { return new Pet().name(name).id(id).category(category); }
    }
}
